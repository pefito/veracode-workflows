##Antes de iniciar, crie os seguintes secrets para o repositório:
## "VID" com o conteúdo da VERACODE API KEY ID
## "VKEY" com o conteúdo da VERACODE API KEY SECRET
## "SRCCLR" com o conteúdo da chave do AGENT SCAN
## Essas chaves devem ser geradas no portal da Veracode


name: Veracode Demo
on:  workflow_call

env:
  package_path: 'verascan'

jobs:
  Package:
    name: Veracode Package
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.packages.outputs.packages }}
    steps:
      - name: Checkout https://github.com/${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Veracode Package
        env:
          VERACODE_API_KEY_ID: ${{ secrets.VID }}
          VERACODE_API_KEY_SECRET: ${{ secrets.VKEY }}
        run: |
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          ./veracode package --source . --output ${{ env.package_path }} --trust
          ls -lah ${{env.package_path}}
      - name: Define matrix
        env:
          PATH: ${{ env.package_path }}
        id: packages
        run: |
            FILES=("$PATH"/*)
            JSON_ARRAY="["
        
            # Constrói o array JSON manualmente
            for FILE in "${FILES[@]}"; do
              JSON_ARRAY+="\"$FILE\","
            done
        
            # Remove a última vírgula e fecha o array
            JSON_ARRAY="${JSON_ARRAY%,}]"
        
            echo "packages=$JSON_ARRAY" >> $GITHUB_OUTPUT

      - name: Upload artfacts
        uses: actions/upload-artifact@v4
        with:
          name: artfacts
          path: ${{env.package_path}}/*

  Veracode-SCA:
    name: Veracode SCA Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout https://github.com/${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Veracode SCA
        env:
          SCAN_DIR: '.'
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
          SRCCLR_SCM_REF_TYPE: 'branch'
          SRCCLR_SCM_REF: ${{ github.ref }}
          SRCCLR_SCM_REV: ${{ github.run_id }}
          EXTRA_ARGS: '--recursive --update-advisor --uri-as-name' 
        run: |          
          curl -sSL https://sca-downloads.veracode.com/ci.sh | bash -s -- scan $EXTRA_ARGS
        continue-on-error: true

  Veracode-Scan:
    name: Veracode Scan
    runs-on: ubuntu-latest
    needs: [Package]
    strategy:
      matrix:
        packages: ${{ fromJson(needs.Package.outputs.packages) }}
    steps:
      - name: Download artfacts
        uses: actions/download-artifact@v4
        with:
          name: artfacts
          path: ./${{env.package_path}}
      - name: Pipeline Scan with Action by Veracode
      # https://github.com/marketplace/actions/veracode-pipeline-scan
        uses: veracode/Veracode-pipeline-scan-action@v1.0.15
        with:
          vid: "${{ secrets.VID }}"
          vkey: "${{ secrets.VKEY }}"
          file: "./${{ matrix.packages }}"
          veracode_policy_name: "Veracode Recommended Medium"
          fail_build: false
          issue_details: true
        continue-on-error: true

      - name: Upload and Scan with Action by Veracode
        uses: veracode/veracode-uploadandscan-action@0.2.7
        with:
          appname: "${{ github.repository }}"
          createprofile: true
          teams: "Showroom_Phelipe"
          filepath: "./${{ matrix.packages }}"
          vid: "${{ secrets.VID }}"
          vkey: "${{ secrets.VKEY }}"
          deleteincompletescan: 2