##Antes de iniciar, crie os seguintes secrets para o repositório:
## "VID" com o conteúdo da VERACODE API KEY ID
## "VKEY" com o conteúdo da VERACODE API KEY SECRET
## "SRCCLR" com o conteúdo da chave do AGENT SCAN
## Essas chaves devem ser geradas no portal da Veracode


name: Veracode Demo
on:  workflow_call
  # workflow_call:
  #   secrets:
  #     SRCCLR_API_TOKEN:
  #       required: true
    # branches:
    #   - pipeline-scan
    #   - policy-scan
    #   - sandbox-scan
##Nome das branches opcional, caso queira criar múltiplas branches e executar
#cada scan em uma branch específica. Em cada stage também há um if: para
#validar se a stage deve ser executada naquela branch.

env:
  package_path: 'verascan'
  package_name: 'verademo.war'
## O nome da variável package_path pode ser modificado. Será criado um diretório
# com esse nome e o conteudo do package será salvo nele.
## O nome da variável package_name irá depender da linguagem/nome do projeto.
# Valide no link abaixo os padrões do Veracode Package ou execute
# uma vez e veja nos logs o nome do arquivo gerado.
## https://docs.veracode.com/r/About_auto_packaging#packaged-artifacts

## Também é possível utilizar o comando 'mv' (comentado abaixo) para renomear
# o package gerado para um nome genérico e utilizá-lo nas tasks seguintes, porém
# caso o comando package identifique mais de uma linguagem no repositório, ele irá
# gerar mais de um .zip e o comando 'mv' deve ser ajustado

jobs:
  Package:
    name: Veracode Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout https://github.com/${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Veracode Package
        env:
          VERACODE_API_KEY_ID: ${{ secrets.VID }}
          VERACODE_API_KEY_SECRET: ${{ secrets.VKEY }}
        run: |
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          ./veracode package --source . --output ${{ env.package_path }} --trust
          ls -lah ${{env.package_path}}
      - name: Upload artfacts
        uses: actions/upload-artifact@v4
        with:
          name: artfacts
          path: ${{env.package_path}}/*

  Veracode-SCA:
    #if: github.ref == 'refs/heads/pipeline-scan'
    name: Veracode SCA Pipeline
    runs-on: ubuntu-latest
    # needs: [Package]
    steps:
      - name: Checkout https://github.com/${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Veracode SCA
        env:
          SCAN_DIR: '.'
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
          SRCCLR_SCM_REF_TYPE: 'branch'
          SRCCLR_SCM_REF: ${{ github.ref }}
          SRCCLR_SCM_REV: ${{ github.run_id }}
          EXTRA_ARGS: '--recursive --update-advisor --uri-as-name' 
        run: |          
          curl -sSL https://sca-downloads.veracode.com/ci.sh | bash -s -- scan $EXTRA_ARGS
        continue-on-error: true